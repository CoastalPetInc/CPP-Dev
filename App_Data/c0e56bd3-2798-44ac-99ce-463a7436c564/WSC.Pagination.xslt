<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE xsl:stylesheet [ <!ENTITY nbsp "&#x00A0;"> ]><xsl:stylesheet  version="1.0"  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"  xmlns:msxml="urn:schemas-microsoft-com:xslt"  xmlns:umbraco.library="urn:umbraco.library" xmlns:Exslt.ExsltCommon="urn:Exslt.ExsltCommon" xmlns:Exslt.ExsltDatesAndTimes="urn:Exslt.ExsltDatesAndTimes" xmlns:Exslt.ExsltMath="urn:Exslt.ExsltMath" xmlns:Exslt.ExsltRegularExpressions="urn:Exslt.ExsltRegularExpressions" xmlns:Exslt.ExsltStrings="urn:Exslt.ExsltStrings" xmlns:Exslt.ExsltSets="urn:Exslt.ExsltSets" xmlns:tagsLib="urn:tagsLib" xmlns:BlogLibrary="urn:BlogLibrary"  exclude-result-prefixes="msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets tagsLib BlogLibrary ">  <xsl:output method="xml" omit-xml-declaration="yes" encoding="UTF-8"/>  <!-- display paging navigation links, if needed -->  <xsl:template name="pagination">    <xsl:param name="pageNumber" />    <xsl:param name="recordsPerPage" />    <xsl:param name="numberOfRecords" />    <xsl:param name="url" />    <xsl:param name="textNext">Next &#187;</xsl:param>    <xsl:param name="textPrev">&#171; Prev</xsl:param>    <xsl:variable name="fullURL">    <xsl:choose>      <xsl:when test="contains($url,'?')">        <xsl:value-of select="$url"/><xsl:text>&amp;page=</xsl:text>      </xsl:when>      <xsl:otherwise>        <xsl:value-of select="$url"/><xsl:text>?page=</xsl:text>      </xsl:otherwise>    </xsl:choose>    </xsl:variable>    <xsl:if test="($recordsPerPage) &lt; ($numberOfRecords)">      <div class="pagination">        <xsl:choose>          <xsl:when test="$pageNumber &lt;= 1">            <span class="previous"><xsl:value-of select="$textPrev" /></span>          </xsl:when>          <xsl:otherwise>            <a class="previous">            <xsl:attribute name="href"> <xsl:value-of select="$fullURL" /> <xsl:value-of select="$pageNumber - 1"/> </xsl:attribute>            <xsl:value-of select="$textPrev" /> </a>          </xsl:otherwise>        </xsl:choose>        <xsl:call-template name="pagination.loop">          <xsl:with-param name="i" select="1" />          <xsl:with-param name="count" select="ceiling($numberOfRecords div $recordsPerPage)" />          <xsl:with-param name="page" select="$pageNumber" />          <xsl:with-param name="fullURL" select="$fullURL"/>        </xsl:call-template>        <xsl:choose>          <xsl:when test="($pageNumber * $recordsPerPage) &lt; ($numberOfRecords)">            <a class="next">            <xsl:attribute name="href"> <xsl:value-of select="$fullURL" /> <xsl:value-of select="$pageNumber + 1"/> </xsl:attribute>            <xsl:value-of select="$textNext" /> </a>          </xsl:when>          <xsl:otherwise>            <span class="next"><xsl:value-of select="$textNext" /></span>          </xsl:otherwise>        </xsl:choose>      </div>    </xsl:if>  </xsl:template>  <!-- For loop -->  <xsl:template name="pagination.loop">    <xsl:param name="i"/>    <xsl:param name="count"/>    <xsl:param name="page"/>    <xsl:param name="fullURL"/>    <xsl:if test="$i &lt;= $count">      <xsl:if test="$page != $i">        <a>        <xsl:attribute name="href"><xsl:value-of select="$fullURL" /><xsl:value-of select="$i"/></xsl:attribute>        <xsl:value-of select="$i" /></a>      </xsl:if>      <xsl:if test="$page = $i">        <strong><xsl:value-of select="$i" /></strong>      </xsl:if>    </xsl:if>    <xsl:if test="$i &lt;= $count">      <xsl:call-template name="pagination.loop">        <xsl:with-param name="i" select="$i + 1"/>        <xsl:with-param name="count" select="$count"/>        <xsl:with-param name="page" select="$page"/>        <xsl:with-param name="fullURL" select="$fullURL"/>      </xsl:call-template>    </xsl:if>  </xsl:template></xsl:stylesheet>